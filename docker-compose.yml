version: '3'
services:
  petclinicRest:
    image: petclinic-rest:v1
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "9966:9966"
    environment:
      - spring.profiles.active=postgres,spring-data-jpa
      - POSTGRES_URL=jdbc:postgresql://postgres:5432/petclinic
    healthcheck:
      test: "curl -s -I http://petclinicRest:9966/petclinic/actuator/health | head -n 1 | grep 200"
      interval: 15s
      timeout: 1m
      retries: 3
    networks:
      - petclinic

  petclinicWeb:
    image: petclinic-web:v1
    depends_on:
      petclinicRest:
        condition: service_healthy
    ports:
      - "4200:80"
    networks:
      - petclinic

  postgres:
    image: postgres:16.3
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=petclinic
      - POSTGRES_USER=petclinic
      - POSTGRES_DB=petclinic
    volumes:
      - postgres-data:/var/lib/postgresql/data
#      - ./postgres-data:/var/lib/postgresql/data
    user: "postgres"
    command: >
      bash -c "chown -R postgres:postgres /var/lib/postgresql/data &&
               docker-entrypoint.sh postgres"
    healthcheck:
#      test: "pg_isready -U petclinic -d petclinic | grep 'accepting connections'"
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - petclinic

networks:
  petclinic:

volumes:
  postgres-data:

